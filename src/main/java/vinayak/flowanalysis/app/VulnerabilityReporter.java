package vinayak.flowanalysis.app;

import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;

import sootup.core.jimple.basic.Value;

public class VulnerabilityReporter {

  private final List<Value> TempNames;
  private final Map<Value, Boolean> variableMap;
  private int arrayUnsafeUsageCount;
  private int arraySafeUsageCount;

  public VulnerabilityReporter() {
    TempNames = new ArrayList<>();
    variableMap = new HashMap<>();
  }

  public void storingTempNames(Value value) {
    TempNames.add(value);
  }

  public void storingVariableMap(Value value, Boolean isUnsafe) {
    variableMap.put(value, isUnsafe);
  }

  public void updateArrayUsageCount(boolean isUnsafe) {
    if (isUnsafe) {
      arrayUnsafeUsageCount++;
    } else {
      arraySafeUsageCount++;
    }
  }

  public String getArrayListClasString() {
    return "ArrayList";
  }

  public List<Value> getTempNames() {
    return TempNames;
  }

  public Map<Value, Boolean> getVariableMap() {
    return variableMap;
  }

  public int getArrayUnsafeUsageCount() {
    return arrayUnsafeUsageCount;
  }

  public int getArraySafeUsageCount() {
    return arraySafeUsageCount;
  }
}
